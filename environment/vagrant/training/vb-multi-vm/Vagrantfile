# -*- mode: ruby -*-
# vi: set ft=ruby :

# This Vagrant script assumes that you are running on a system with virtualbox installed.
# Modify the network settings to match your environment.

# Make sure to be using the vagrant-vbguest plugin

agent_box        = 'bento/ubuntu-16.04'
agent_cpus       = '1'
agent_memory     = '640'
validator_box    = 'bento/ubuntu-16.04'
validator_cpus   = '1'
validator_memory = '1024'
timezone         = '/usr/share/zoneinfo/America/Denver'         # modify this for your timezone

Vagrant.configure("2") do |config|

  config.vm.define "agent01", autostart: false do |agent|
    agent.vm.box = agent_box
    agent.vm.host_name = "agent01"
    agent.vm.network 'private_network', ip: "10.20.30.101"
    agent.ssh.private_key_path = '~/.vagrant.d/insecure_private_key'
    agent.ssh.insert_key = false
    agent.vm.provider "virtualbox" do |vb|
      vb.name   = "agent01"
      vb.gui    = false
      vb.memory = agent_memory
      vb.cpus   = agent_cpus
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
    agent.vm.provision "indy", type: "shell", path: "scripts/agent.sh", args: [timezone]
  end

  config.vm.define "agent02", autostart: false do |agent|
    agent.vm.box = agent_box
    agent.vm.host_name = "agent02"
    agent.vm.network 'private_network', ip: "10.20.30.102"
    agent.ssh.private_key_path = '~/.vagrant.d/insecure_private_key'
    agent.ssh.insert_key = false
    agent.vm.provider "virtualbox" do |vb|
      vb.name   = "agent02"
      vb.gui    = false
      vb.memory = agent_memory
      vb.cpus   = agent_cpus
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
    agent.vm.provision "indy", type: "shell", path: "scripts/agent.sh", args: [timezone]
  end

  config.vm.define "agent03", autostart: false do |agent|
    agent.vm.box = agent_box
    agent.vm.host_name = "agent03"
    agent.vm.network 'private_network', ip: "10.20.30.103"
    agent.ssh.private_key_path = '~/.vagrant.d/insecure_private_key'
    agent.ssh.insert_key = false
    agent.vm.provider "virtualbox" do |vb|
      vb.name   = "agent03"
      vb.gui    = false
      vb.memory = agent_memory
      vb.cpus   = agent_cpus
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
    agent.vm.provision "indy", type: "shell", path: "scripts/agent.sh", args: [timezone]
  end

  config.vm.define "libindy01", autostart: false do |libindy|
    libindy.vm.box = agent_box
    libindy.vm.host_name = "libindy01"
    libindy.vm.network 'private_network', ip: "10.20.30.105"
    libindy.ssh.private_key_path = '~/.vagrant.d/insecure_private_key'
    libindy.ssh.insert_key = false
    libindy.vm.provider "virtualbox" do |vb|
      vb.name   = "libindy01"
      vb.gui    = false
      vb.memory = agent_memory
      vb.cpus   = agent_cpus
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
    libindy.vm.provision "indy", type: "shell", path: "scripts/lib_indy.sh", args: [timezone]
  end

  config.vm.define "libindy02", autostart: false do |libindy|
    libindy.vm.box = agent_box
    libindy.vm.host_name = "libindy02"
    libindy.vm.network 'private_network', ip: "10.20.30.106"
    libindy.ssh.private_key_path = '~/.vagrant.d/insecure_private_key'
    libindy.ssh.insert_key = false
    libindy.vm.provider "virtualbox" do |vb|
      vb.name   = "libindy02"
      vb.gui    = false
      vb.memory = agent_memory
      vb.cpus   = agent_cpus
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
    libindy.vm.provision "indy", type: "shell", path: "scripts/lib_indy.sh", args: [timezone]
  end

  config.vm.define "cli01", autostart: true do |cli|
    cli.vm.box = agent_box
    cli.vm.host_name = "cli01"
    cli.vm.network 'private_network', ip: "10.20.30.104"
    cli.ssh.private_key_path = '~/.vagrant.d/insecure_private_key'
    cli.ssh.insert_key = false
    cli.vm.provider "virtualbox" do |vb|
      vb.name   = "cli01"
      vb.gui    = false
      vb.memory = agent_memory
      vb.cpus   = agent_cpus
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
    cli.vm.provision "indy", type: "shell", path: "scripts/agent.sh", args: [timezone]
  end

  config.vm.define "validator01" do |validator|
    validator.vm.box = validator_box
    validator.vm.host_name = "validator01"
    validator.vm.network 'private_network', ip: "10.20.30.201"
    validator.ssh.private_key_path = '~/.vagrant.d/insecure_private_key'
    validator.ssh.insert_key = false
    validator.vm.provider "virtualbox" do |vb|
      vb.name   = "validator01"
      vb.gui    = false
      vb.memory = validator_memory
      vb.cpus   = validator_cpus
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
    validator.vm.provision "indy", type: "shell", path: "scripts/validator.sh", args: ["Node1", "9701", "9702", timezone]
  end

  config.vm.define "validator02" do |validator|
    validator.vm.box = validator_box
    validator.vm.host_name = "validator02"
    validator.vm.network 'private_network', ip: "10.20.30.202"
    validator.ssh.private_key_path = '~/.vagrant.d/insecure_private_key'
    validator.ssh.insert_key = false
    validator.vm.provider "virtualbox" do |vb|
      vb.name   = "validator02"
      vb.gui    = false
      vb.memory = validator_memory
      vb.cpus   = validator_cpus
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
    validator.vm.provision "indy", type: "shell", path: "scripts/validator.sh", args: ["Node2", "9703", "9704", timezone]
  end


  config.vm.define "validator03" do |validator|
    validator.vm.box = validator_box
    validator.vm.host_name = "validator03"
    validator.vm.network 'private_network', ip: "10.20.30.203"
    validator.ssh.private_key_path = '~/.vagrant.d/insecure_private_key'
    validator.ssh.insert_key = false
    validator.vm.provider "virtualbox" do |vb|
      vb.name   = "validator03"
      vb.gui    = false
      vb.memory = validator_memory
      vb.cpus   = validator_cpus
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
    validator.vm.provision "indy", type: "shell", path: "scripts/validator.sh", args: ["Node3", "9705", "9706", timezone]
  end

  config.vm.define "validator04" do |validator|
    validator.vm.box = validator_box
    validator.vm.host_name = "validator04"
    validator.vm.network 'private_network', ip: "10.20.30.204"
    validator.ssh.private_key_path = '~/.vagrant.d/insecure_private_key'
    validator.ssh.insert_key = false
    validator.vm.provider "virtualbox" do |vb|
      vb.name   = "validator04"
      vb.gui    = false
      vb.memory = validator_memory
      vb.cpus   = validator_cpus
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    end
    validator.vm.provision "indy", type: "shell", path: "scripts/validator.sh", args: ["Node4", "9707", "9708", timezone]
  end

end
