#!/bin/bash

# it should be fixed
USER_CONFIG_DIR="/etc/indy"
GENERAL_DATA_DIR="/var/lib/indy"
GENERAL_LOG_DIR="/var/log/indy"

CLI_BASE_DIR="/home/indy/.indy-cli"
CLI_NETWORKS_DIR="$CLI_BASE_DIR/networks"
CLI_WALLETS_DIR="$CLI_BASE_DIR/wallets"

INSTALL_DIR="/usr/local/lib/python3.5/dist-packages"

# workaround when .indy become regular file
if [ -f $CLI_BASE_DIR ]; then
    rm $CLI_BASE_DIR
fi
mkdir -p $CLI_BASE_DIR $CLI_NETWORKS_DIR $CLI_WALLETS_DIR
cp $INSTALL_DIR/sovrin_client/user_config/indy_config.py $CLI_BASE_DIR
chown -R indy:indy $CLI_BASE_DIR


# create indy config folder if does not exist
mkdir -p $USER_CONFIG_DIR

# create indy node config if does not exist
if [ ! -f $USER_CONFIG_DIR/indy_config.py ]; then
    cp $INSTALL_DIR/sovrin_node/user_config/indy_config.py $USER_CONFIG_DIR
fi
chown -R indy:indy $USER_CONFIG_DIR

# create general indy data folder if does not exist
mkdir -p $GENERAL_DATA_DIR
chown -R indy:indy $GENERAL_DATA_DIR

# create general indy log folder if does not exist
mkdir -p $GENERAL_LOG_DIR
chown -R indy:indy $GENERAL_LOG_DIR

# change permissions for plenum folders
chown -R indy:indy /var/plenum/
chown -R indy:indy /var/log/plenum
chown -R indy:indy /etc/plenum

# init_sovrin_node script
cat <<EOF > /usr/local/bin/init_sovrin_node
#!/bin/bash

if [ \$# -lt 3 ]; then
    echo ""
    echo "Usage: \$0 name port client_port [seed]";
    echo "  name        - node name";
    echo "  port        - node port";
    echo "  client_port - node client port";
    echo "  seed        - node seed";
    echo ""
    exit 1;
fi

echo "NODE_NAME=\$1" > $USER_CONFIG_DIR/indy.env
echo "NODE_PORT=\$2" >> $USER_CONFIG_DIR/indy.env
echo "NODE_CLIENT_PORT=\$3" >> $USER_CONFIG_DIR/indy.env

if [ -z \$4 ]; then
    init_sovrin_keys --name \$1
else
    init_sovrin_keys --name \$1 --seed \$4
fi
EOF

chmod +x /usr/local/bin/init_sovrin_node

# add systemd script
cat <<EOF > /etc/systemd/system/sovrin-node.service
[Unit]
Description=Sovrin Node
Requires=sovrin-node-control.service

[Service]
EnvironmentFile=$USER_CONFIG_DIR/indy.env
ExecStart=/usr/bin/env python3 -O /usr/local/bin/start_sovrin_node \${NODE_NAME} \${NODE_PORT} \${NODE_CLIENT_PORT}
User=sovrin
Group=sovrin
Restart=on-failure
RestartSec=10
StartLimitBurst=10
StartLimitInterval=200
TimeoutSec=300

[Install]
WantedBy=multi-user.target
EOF


cat <<EOF > /etc/systemd/system/sovrin-node-control.service
[Unit]
Description=Service for upgrade existing Sovrin and another operations
#Requires=sovrin.service
#After=sovrin.service
After=network.target

[Service]
Type=simple
EnvironmentFile=$USER_CONFIG_DIR/node_control.conf
ExecStart=/usr/bin/env python3 -O /usr/local/bin/start_node_control_tool.py \$TEST_MODE --hold-ext \$HOLD_EXT
Restart=on-failure
RestartSec=10
StartLimitBurst=10
StartLimitInterval=200
TimeoutSec=300

[Install]
WantedBy=multi-user.target
EOF

HOLD_EXT_ADDED=$(grep HOLD_EXT /etc/indy/node_control.conf)
if [ ! -f $USER_CONFIG_DIR/node_control.conf ] || [ -z "${HOLD_EXT_ADDED}" ]; then
    cat <<EOF > $USER_CONFIG_DIR/node_control.conf
# Uncomment this to run agent in test mode:
#TEST_MODE=--test

TEST_MODE=
HOLD_EXT=\"\"
EOF
fi

mv /usr/local/bin/upgrade_sovrin_node_ubuntu1604.sh /usr/local/bin/upgrade_sovrin_node
mv /usr/local/bin/upgrade_sovrin_node_ubuntu1604_test.sh /usr/local/bin/upgrade_sovrin_node_test
mv /usr/local/bin/restart_sovrin_node_ubuntu1604.sh /usr/local/bin/restart_sovrin_node

chmod +x /usr/local/bin/upgrade_sovrin_node
chmod +x /usr/local/bin/upgrade_sovrin_node_test
chmod +x /usr/local/bin/restart_sovrin_node
chmod +x /usr/local/bin/start_node_control_tool.py

rm -f /usr/local/bin/delete_sovrin_node.bat /usr/local/bin/upgrade_sovrin_node_test.bat /usr/local/bin/restart_sovrin_node.bat /usr/local/bin/install_nssm.bat /usr/local/bin/upgrade_sovrin_node.bat /usr/local/bin/install_sovrin_node.bat

# Automatically added from template:
if which py3compile >/dev/null 2>&1; then
	py3compile -O -p indy-node $INSTALL_DIR
fi

# End automatically added section